services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    # 默认使用官方 Ollama 镜像。对于 GPU 支持，请取消注释下面的相应行，并注释掉默认的 image 指令。
    # 确保你的主机已正确安装 NVIDIA 驱动并配置 Docker 以使用 GPU。
    # 更多关于 Ollama GPU 支持和可用标签的信息，请参考 Ollama 官方文档。
    image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest} # 默认 CPU 版本或根据 Ollama 官方 `latest` 标签的行为
    # image: ollama/ollama:0.1.41 # 指定一个具体的 CPU 版本 (版本号仅为示例)
    # image: ollama/ollama:0.1.41-cuda # 示例：NVIDIA CUDA GPU 支持 (请替换为最新的或期望的 CUDA 版本标签)
    # image: ollama/ollama:0.1.41-rocm # 示例：AMD ROCm GPU 支持 (请替换为最新的或期望的 ROCm 版本标签)

  open-webui:
    image: cnqsxdy/openwebui:latest # 标准版本 (推荐，使用外部 Ollama 服务)
    # image: cnqsxdy/openwebui:${WEBUI_DOCKER_TAG_CUDA-latest-cuda} # CUDA 版 PyTorch (配合外部 GPU Ollama 服务)
    # image: cnqsxdy/openwebui:${WEBUI_DOCKER_TAG_OLLAMA-latest-ollama} # Ollama 捆绑版 (实验性)
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    #    如果不修改则默认使用外部3000端口运行项目，如果修改则需要修改为修改后的端口，示例：- 3001:8080  
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY=1234567890' # WebUI 密钥，必须修改为强密码。(注意保留结尾 '符号)
      #- 'DATABASE_URL=mysql+pymysql://USER:PASSWORD@HOST:PORT/DB_NAME' 
      # 取消上方注释改用 MySQL或pymysql （暂未支持！需后续兼容迁移脚本）示例：- 'DATABASE_URL=mysql+pymysql://root:123456@mysql:3306/openwebui'

      #- 'REDIS_URL=redis://:your_redis_password@localhost:6379/0'
      # 取消上方注释并替换为您的 Redis 连接信息 (如果需要)无密码示例：- 'REDIS_URL=redis://redis:6379/0'
      
      - 'ENABLE_SIGNUP=true'  # 确保允许用户注册
      - 'CORS_ALLOW_ORIGIN=你的域名' # 修改为您的前端访问地址，例如 https://your_domain.com或http://外网IP:端口号

    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

volumes:
  ollama: {}
  open-webui: {}
